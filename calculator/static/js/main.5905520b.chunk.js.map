{"version":3,"sources":["constants/Bases.js","components/ControlsArea/BasePicker/BasePicker.module.css","components/ComputationArea/ComputationArea.module.css","components/ControlsArea/NumPad/KeyButton/KeyButton.module.css","hoc/Layout.module.css","containers/Calculator/Calculator.js","components/ComputationArea/Computation/Computation.module.css","components/ComputationArea/CurrentComputation/CurrentComputation.module.css","components/ControlsArea/NumPad/NumPad.module.css","components/ControlsArea/ControlsArea.module.css","containers/Calculator/Calculator.module.css","components/ControlsArea/BasePicker/BasePicker.js","components/ControlsArea/NumPad/KeyButton/KeyButton.js","components/ControlsArea/NumPad/NumPad.js","components/ControlsArea/ControlsArea.js","components/ComputationArea/Computation/Computation.js","components/ComputationArea/CurrentComputation/CurrentComputation.js","components/ComputationArea/ComputationArea.js","hoc/Layout.js","App.js","serviceWorker.js","index.js"],"names":["BIN","OCT","DEC","HEX","module","exports","Calculator","state","base","currentExpression","currentValue","expressionHistory","newComputation","setBase","terms","split","value","convertBetweenBases","BASES","setState","join","clickKey","key","eval","error","Number","isInteger","includes","length","substring","newExpression","slice","console","log","onKeyDown","e","preventDefault","keys","this","isNaN","bind","from","to","map","index","number","parseInt","toString","toUpperCase","window","addEventListener","removeEventListener","className","classes","history","Component","BasePicker","props","currentBase","active","onClick","Button","btnType","disabled","clicked","children","NumPad","isHex","isOct","isBin","isDec","KeyButton","onClickKey","ControlsArea","Fragment","ControlsHeader","Computation","expression","CurrentComputation","result","currentComputation","ComputatationArea","Wrapper","Layout","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5905520b.chunk.js","sourcesContent":["export const BIN = 2;\r\nexport const OCT = 8;\r\nexport const DEC = 10;\r\nexport const HEX = 16;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BasePicker\":\"BasePicker_BasePicker__24t7o\",\"active\":\"BasePicker_active__1GgCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ComputatationArea\":\"ComputationArea_ComputatationArea__1wkYW\",\"Wrapper\":\"ComputationArea_Wrapper__1x8SW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"KeyButton_Button__1QIEI\",\"digit\":\"KeyButton_digit__37Kbs\",\"operator\":\"KeyButton_operator__2lNiL\",\"equal\":\"KeyButton_equal__n_e1j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1iljf\"};","import React, {Component} from 'react';\r\n\r\nimport ComputationArea from './../../components/ComputationArea/ComputationArea';\r\nimport ControlsArea from './../../components/ControlsArea/ControlsArea';\r\nimport * as BASES from './../../constants/Bases';\r\n\r\nimport classes from './Calculator.module.css';\r\n\r\nclass Calculator extends Component {\r\n\r\n    state = {\r\n        base: 'DEC',\r\n        currentExpression: '',\r\n        currentValue: '',\r\n        expressionHistory: [],\r\n        newComputation: false\r\n    };\r\n\r\n    convertBetweenBases(terms, from, to) {\r\n        terms = terms.map((value, index) => {\r\n            const number = Number.parseInt(value, from);\r\n            if (!Number.isNaN(number)) {\r\n                return number.toString(to).toUpperCase();\r\n            } else {\r\n                return value;\r\n            }\r\n        });\r\n        return terms;\r\n    }\r\n\r\n    setBase = (base) => {\r\n        if (this.state.currentExpression && base !== this.state.base) {\r\n            let terms = this.state.currentExpression.split(' ');\r\n            let value = this.state.currentValue;\r\n\r\n            terms = this.convertBetweenBases(terms, BASES[this.state.base], BASES[base]);\r\n            value = this.convertBetweenBases([value], BASES[this.state.base], BASES[base])[0]\r\n            \r\n            this.setState((state) => {\r\n                return {\r\n                    base: base,\r\n                    newComputation: state.currentValue ? true : false,\r\n                    currentExpression: terms.join(' '),\r\n                    currentValue: value\r\n                }\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            base: base\r\n        });\r\n    }\r\n\r\n    clickKey = (key) => {\r\n        this.setState((state) => {\r\n            if (state.newComputation && state.currentExpression) {\r\n                return {\r\n                    currentValue: '',\r\n                    currentExpression: '',\r\n                    expressionHistory: [...state.expressionHistory, [state.currentExpression, state.currentValue]],\r\n                    newComputation: false\r\n                }\r\n            }\r\n        });\r\n        if (key === '=') {\r\n            this.setState((state) => {\r\n                if (state.currentExpression && state.newComputation === false) {\r\n                    let currentValue = '';\r\n                    try {\r\n                        if (state.base === 'DEC') {\r\n                            currentValue = eval(state.currentExpression);\r\n                        } else {\r\n                            currentValue = eval(this.convertBetweenBases(state.currentExpression.split(' '), BASES[state.base], BASES.DEC).join(' '))\r\n                            currentValue = this.convertBetweenBases([currentValue], BASES.DEC, BASES[state.base])[0];\r\n                        }\r\n                        return {\r\n                            currentValue: currentValue,\r\n                            newComputation: true\r\n                        }\r\n                    } catch (error) {\r\n                        return {\r\n                            currentValue: 'Error',\r\n                            newComputation: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (Number.isInteger(key) || ['A', 'B', 'C', 'D', 'E', 'F'].includes(key)) {\r\n            this.setState((state) => {\r\n                return {\r\n                    currentExpression: state.currentExpression + key\r\n                }\r\n            });\r\n        }\r\n        if ( key === '+' || key === '-' || key === '/' || key === '*' || key === '%' || key === '(' || key === ')' || key === '<<' || key === '>>' || key === '**') {\r\n            this.setState((state) => {\r\n                return {\r\n                    currentExpression: state.currentExpression + ' ' + key + ' '\r\n                }\r\n            });\r\n        }\r\n        if ( key === 'sign') {\r\n            const terms = this.state.currentExpression.split(' ');\r\n            if (this.state.currentExpression) {\r\n                if (terms[terms.length - 1][0] === '-') {\r\n                    terms[terms.length - 1] = '+' + terms[terms.length - 1].substring(1);\r\n                } else if (terms[terms.length - 1][0] === '+') {\r\n                    terms[terms.length - 1] = '-' + terms[terms.length - 1].substring(1);\r\n                } else {\r\n                    terms[terms.length - 1] = '-' + terms[terms.length - 1];\r\n                }\r\n            }\r\n            this.setState({\r\n                currentExpression: terms.join(' ')\r\n            });\r\n        }\r\n        if (key === 'clear') {\r\n            this.setState((state) => {\r\n                return {\r\n                    currentValue: '',\r\n                    currentExpression: '',\r\n                }\r\n            });\r\n        }\r\n        if (key === 'backspace') {\r\n            this.setState((state) => {\r\n                let newExpression;\r\n                if (state.currentExpression[state.currentExpression.length - 1] === ' ') {\r\n                    if (['>>','<<','**'].includes(state.currentExpression[state.currentExpression.length - 3] + state.currentExpression[state.currentExpression.length - 2])) {\r\n                        newExpression = state.currentExpression.slice(0, -4);\r\n                    } else if (['+','-','*','/','%'].includes(state.currentExpression[state.currentExpression.length - 2])) {\r\n                        newExpression = state.currentExpression.slice(0, -3);\r\n                    } else {\r\n                        newExpression = state.currentExpression.slice(0, -2);\r\n                        console.log(newExpression)\r\n                    }\r\n                } else {\r\n                    newExpression = state.currentExpression.slice(0, -1);\r\n                }\r\n                \r\n                return {\r\n                    currentExpression: newExpression\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onKeyDown = function(e) {\r\n        e.preventDefault();\r\n        let keys = ['0', '1', '/', '+', '-', '*', 'Enter', '(', ')', 'Backspace'];\r\n        \r\n        switch (this.state.base) {\r\n            case 'DEC' : keys = [...keys, '2','3','4','5','6','7','8','9']; break;\r\n            case 'HEX' : keys = [...keys, 'A', 'B', 'C', 'D', 'E', 'F', '2', '3', '4', '5', '6', '7', '8', '9']; break;\r\n            case 'OCT' : keys = [...keys, '2', '3', '4', '5', '6', '7']; break;\r\n            default:\r\n        }\r\n        if (keys.includes(e.key)) {\r\n            const key = e.key === 'Enter' ? '=' :\r\n                e.key === 'Backspace' ? 'backspace' :\r\n                    Number.isNaN(Number(e.key)) ? e.key : Number(e.key);\r\n\r\n            this.clickKey(key);\r\n        }\r\n    }.bind(this);\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.onKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.onKeyDown);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className={classes.Calculator}>\r\n                <ComputationArea\r\n                    currentExpression={this.state.currentExpression}\r\n                    currentValue={this.state.currentValue}\r\n                    history={this.state.expressionHistory}\r\n                />\r\n                <ControlsArea\r\n                    setBase={this.setBase}\r\n                    base={this.state.base}\r\n                    clickKey={this.clickKey}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Computation\":\"Computation_Computation__1LsxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CurrentComputation\":\"CurrentComputation_CurrentComputation__2pWjl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NumPad\":\"NumPad_NumPad__vpKEf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlsHeader\":\"ControlsArea_ControlsHeader__1Bqrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calculator\":\"Calculator_Calculator__3EH-t\"};","import React from 'react';\r\n\r\nimport classes from './BasePicker.module.css';\r\n\r\nconst BasePicker = (props) => {\r\n    return (\r\n        <ul className={classes.BasePicker}>\r\n            <li><button className={props.currentBase === 'HEX' ? classes.active : null} onClick={() => props.setBase('HEX')}>HEX</button></li>\r\n            <li><button className={props.currentBase === 'DEC' ? classes.active : null} onClick={() => props.setBase('DEC')}>DEC</button></li>\r\n            <li><button className={props.currentBase === 'OCT' ? classes.active : null} onClick={() => props.setBase('OCT')}>OCT</button></li>\r\n            <li><button className={props.currentBase === 'BIN' ? classes.active : null} onClick={() => props.setBase('BIN')}>BIN</button></li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default BasePicker;","import React from 'react';\r\nimport classes from './KeyButton.module.css';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={[classes.Button, props.btnType ? classes[props.btnType] : null].join(' ')} disabled={props.disabled} onClick={props.clicked}>{props.children}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport classes from './NumPad.module.css';\r\n\r\nimport KeyButton from './KeyButton/KeyButton';\r\n\r\nconst NumPad = (props) => {\r\n\r\n    const isHex = props.base === 'HEX' ? true : false;\r\n    const isOct = props.base === 'OCT' ? true : false;\r\n    const isBin = props.base === 'BIN' ? true : false;\r\n    const isDec = props.base === 'DEC' ? true : false;\r\n\r\n    return (\r\n        <div className={classes.NumPad}>\r\n            <KeyButton btnType=\"digit\" disabled={!isHex} clicked={() => props.onClickKey('A')}>A</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('<<')}>&laquo;</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('>>')}>&raquo;</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('clear')}>C</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('backspace')}>&larr;</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isHex} clicked={() => props.onClickKey('B')}>B</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('(')}>(</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey(')')}>)</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('%')}>%</KeyButton>\r\n            <KeyButton btnType=\"operator\" clicked={() => props.onClickKey('/')}>&divide;</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isHex} clicked={() => props.onClickKey('C')}>C</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex} clicked={() => props.onClickKey(7)}>7</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isHex} clicked={() => props.onClickKey(8)}>8</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isHex} clicked={() => props.onClickKey(9)}>9</KeyButton>\r\n            <KeyButton btnType=\"operator\" clicked={() => props.onClickKey('*')}>&times;</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isHex} clicked={() => props.onClickKey('D')}>D</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex} clicked={() => props.onClickKey(4)}>4</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex} clicked={() => props.onClickKey(5)}>5</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex} clicked={() => props.onClickKey(6)}>6</KeyButton>\r\n            <KeyButton btnType=\"operator\" clicked={() => props.onClickKey('-')}>&minus;</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isHex} clicked={() => props.onClickKey('E')}>E</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex && !isBin} clicked={() => props.onClickKey(1)}>1</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex} clicked={() => props.onClickKey(2)}>2</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex} clicked={() => props.onClickKey(3)}>3</KeyButton>\r\n            <KeyButton btnType=\"operator\" clicked={() => props.onClickKey('+')}>&#43;</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isHex} clicked={() => props.onClickKey('F')}>F</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('sign')}>+/-</KeyButton>\r\n            <KeyButton btnType=\"digit\" disabled={!isDec && !isOct && !isHex && !isBin} clicked={() => props.onClickKey(0)}>0</KeyButton>\r\n            <KeyButton clicked={() => props.onClickKey('**')}>^</KeyButton>\r\n            <KeyButton btnType=\"equal\" clicked={() => props.onClickKey('=')}>=</KeyButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NumPad;","import React from 'react';\r\n\r\nimport BasePicker from './BasePicker/BasePicker';\r\nimport NumPad from './NumPad/NumPad';\r\n\r\nimport classes from './ControlsArea.module.css';\r\n\r\nconst ControlsArea = (props) => (\r\n    <React.Fragment>\r\n        <div className={classes.ControlsHeader}>\r\n            <BasePicker setBase={props.setBase} currentBase={props.base}/>\r\n        </div>\r\n        <NumPad onClickKey={props.clickKey} base={props.base}/>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default ControlsArea;","import React from 'react';\r\n\r\nimport classes from './Computation.module.css';\r\n\r\nconst Computation = (props) => (\r\n    <p className={classes.Computation}>{props.expression} = {props.value}</p>\r\n);\r\n\r\nexport default Computation;","import React from 'react';\r\nimport classes from './CurrentComputation.module.css';\r\n\r\nconst CurrentComputation = (props) => {\r\n    let result;\r\n    if (props.value) {\r\n        result = <span> = <br/><strong> {props.value}</strong></span>;\r\n    } else {\r\n        result = <span></span>;\r\n    }\r\n    \r\n    return (\r\n        <p className={classes.CurrentComputation}>{props.currentComputation === '' ? '0' : props.currentComputation} {result}</p>\r\n    );\r\n};\r\n\r\nexport default CurrentComputation;","import React from 'react';\r\n\r\nimport classes from './ComputationArea.module.css';\r\n\r\nimport Computation from './Computation/Computation';\r\nimport CurrentComputation from './CurrentComputation/CurrentComputation'\r\n\r\nconst ComputatationArea = (props) => (\r\n    <div className={classes.Wrapper}>\r\n        <div className={classes.ComputatationArea}>\r\n            {props.history.map((value, index) => {\r\n                return <Computation key={index} expression={value[0]} value={value[1]}/>\r\n            })}\r\n            <CurrentComputation currentComputation={props.currentExpression} value={props.currentValue} />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default ComputatationArea;","import React from 'react';\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div className={classes.Layout}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\n\nimport Layout from './hoc/Layout';\nimport Calculator from './containers/Calculator/Calculator';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Calculator></Calculator>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}